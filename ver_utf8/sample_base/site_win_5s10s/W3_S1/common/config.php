<?php
/*******************************************************************************
SiteWin10 20 30（MySQL版）
共通設定情報ファイルの定義

*******************************************************************************/

#=================================================================================
# マルチバイト関数用に言語と文字コードを指定する（文字列置換、メール送信等で必須）
#=================================================================================
mb_language("Japanese");
mb_internal_encoding("UTF-8");

#=================================================================================
#  本番アップ後の処理 ※本番アップする際に以下の記述をする事！
#=================================================================================
// demoURLへのアクセス 0：アクセス許可（制作時は“0”） ／ 1：許可しない（本番アップ後は“1”にする）
$siteopne_flg = 0;

// 本番のURL
$domain = "http://www.zeek.jp/back_office/";

#=================================================================================
# ＤＢ接続の情報（定数化）
#=================================================================================
define('DB_SERVER','localhost');
define('DB_NAME','site10_db');
define('DB_USER','site10_db');
define('DB_PASS','371VtfE7');
define('DSN',"mysql://site10_db:371VtfE7@localhost/site10_db");	// PEAR用

#=================================================================================
# 管理画面のIDとパスワード
#=================================================================================
define('BO_ID','test');		# ID
define('BO_PW','pass');		# PW

#=================================================================================
# 頻繁に行う簡易処理のファンクション化（匿名関数）
#=================================================================================
// UNIX時間＋マイクロ秒によるID生成
$makeID = create_function('','return date("U")."-".sprintf("%06d",(microtime() * 1000000));');

// パスワード作成
$makePass = create_function('','$pass = crypt(mt_rand(0,99999999),"CP");return ereg_replace("[^a-zA-Z0-9]","",$pass);');

#=================================================================================
# “htmlspecialchars()”でエンティティ化したHTML特殊文字を
#	Flashで正常表示できるように全角に変換するファンクション
#=================================================================================
function h14s_han2zen(&$str){

	$str = str_replace("&amp;","＆",$str);
	$str = str_replace("&quot;","”",$str);
	$str = str_replace("&lt;","＜",$str);
	$str = str_replace("&gt;","＞",$str);
	$str = str_replace("&#39","’",$str);
	$str = str_replace("'","’",$str);
	$str = str_replace("&","＆",$str);
	$str = str_replace("%","%25",$str);
	$str = str_replace("+","%2b",$str);

	return $str;
}

#=================================================================================
# 管理情報テーブルよりメールアドレスを取得するファンクション
#	メソッド名：getInitData("カラム名")
#=================================================================================
function getInitData($colum = ""){

	if(!$colum)$colum = "EMAIL1";

	$sql = "SELECT {$colum} FROM APP_INIT_DATA WHERE(RES_ID = '1')";
	$con = mysql_connect(DB_SERVER,DB_USER,DB_PASS);
	mysql_select_db(DB_NAME,$con);

	if($query = mysql_query($sql)):

		$fetch = mysql_result($query,0,$colum);
		mysql_free_result($query);
		mysql_close($con);

		return $fetch;

	endif;

}

#=================================================================================
# 転送処理を行うファンクション（引数：対象URL、戻り値：なし）
#=================================================================================
$layer_free = "Layer_free";//カラーパレットに使用するレイヤー名

function location($url){

echo '<html><head><title></title></head>',
'<body onLoad="Javascript:document.location.submit();">',
'<form name="location" action="'.$url.'" method="post">',
'</form></body></html>',
'<noscript>header("Location: '.$url.'");</noscript>';
exit();
}

#=================================================================================
# ＨＴＭＬタグの有効処理
#
# 【back_office/n○whatsnew/LGC_regist.php】でＨＴＭＬタグの有効処理の上に
# addslashesの処理を行っておりますが、こちらの処理でもaddslashesをおこなっております。
# 二重に処理を行わないよう注意をしてください。
# （二重に処理をしますとaddslashesが無効になります。）
#=================================================================================
function html_tag($str){

	$str  = mb_convert_kana($str,"KV");//半角を全角に変換処理
	$str = strip_tags($str,"<span><p><a><b><i><strong><em><u>");
	$str = utilLib::strRep($str ,7); // 前後の空白除去
	$str  = utilLib::strRep($str ,4); // stripslashes
	$str  = utilLib::strRep($str ,5); // addslashes

	return $str;
}
$layer_free = "Layer_free";//カラーボタンの付近にレイヤーを表示するレイヤー用

#=================================================================================
# ファイル検索システム
#

# 管理画面でjpag,gif,pngの３種類のファイルを登録できるようになったので
# 昔の様にjpagのみとは行かなくなったのでこちらの関数でファイルを取得して
# その配列データでファイルの削除と表示をさせる。
#=================================================================================

#=================================================================================
# ファイル検索表示システム
#

# 検索に該当したファイルを表示する
# 登録ファイル名の基本は【RES_ID.拡張子】の組み合わせなので
# 検索方法は【path/RES_ID.".".*】【path/RES_ID."_"$i.".".*】などで
# 拡張子をワイルドカードに表示が基本になる
# 基本的に不要な登録ファイルは削除するようにして該当するファイルは一つにすること
# こちらの表示処理は一番最初に該当するファイルを表示させる。
#

# $path		ファイルが置いてある階層へのパス
# $con		表示対象のファイル条件
# $option	表示するのに必要な設定を記述（width="200" hegith="150" alt="img" style="margin:10px;" などimgタグに記述する内容）
# $size_lock

# 		1 = 検索で該当したファイルの縦横サイズをimgタグに出力
# 		2 = パスのみ表示
# 		デフォルト = サイズ固定なし
#

# 		１はN3などアンカーで、表示する時に画像読み込み中などの影響でアンカー位置がずれてしまうのを防ぐ
# 		サムネイル用など元の画像を小さくする場合にはフラグを立たせずに$optionで横幅を指定する
# 		２はライトボックスなどで画像のパスを指定しないといけない箇所にパスを置く為
#=================================================================================
function search_file_disp($path,$con,$option = "",$size_lock = null){

	$disp_image = "";//表示する変数の初期化（表示する画像が無い場合もある為）

	//階層と条件が入っているか確認
	if($path && $con){

		$s_data = glob($path.$con);//検索結果を受け取る

		//検索結果に該当するファイルがあった場合
		if(count($s_data)){
			if($size_lock == 2){//パスのみを表示
				$disp_image = $s_data[0];
			}elseif($size_lock == 1){//サイズ固定のフラグがたっている場合
				$size = getimagesize($s_data[0]);//画像サイズを取得
				$disp_image = "<img src=\"".$s_data[0]."?r=".rand()."\" width=\"".$size[0]."\" height=\"".$size[1]."\" ".$option.">";//検索に該当したファイル名を渡す。また、設定する記述も付け加える。
			}else{//固定なし
				$disp_image = "<img src=\"".$s_data[0]."?r=".rand()."\" ".$option.">";//検索に該当したファイル名を渡す。また、設定する記述も付け加える。
			}
		}
	}

	//データを返す
	return $disp_image;
}

#=================================================================================
# ファイル検索表示フラグシステム
#

# 検索に該当したファイルがあるかのチェックを行う
# 使用目的は管理画面での画像が登録しているかしていないかで分岐する
# 箇所の補助、返値はtrue（ファイル在り）とfalse（ファイルなし）で返答
#
# 例　登録している画像の削除ボタンの表示判定、複数画像があれば画像の切り替え判定
#

# $path		ファイルが置いてある階層へのパス
# $con		表示対象のファイル条件
#=================================================================================
function search_file_flg($path,$con){

	//階層と条件が入っているか確認
	if($path && $con){

		$s_data = glob($path.$con);//検索結果を受け取る

		//検索結果に該当するファイルがあった場合
		if(count($s_data)){
			return true;
		}
	}

	//該当ファイルが無かった場合
	return false;
}

#=================================================================================
# ファイル検索削除システム
#

# 検索に該当したファイルを削除する
# 登録ファイル名の基本は【RES_ID.拡張子】の組み合わせなので
# 検索方法は【path/RES_ID.".".*】【path/RES_ID."_"$i.".".*】などで
# 拡張子をワイルドカードに削除が基本になる
#

# また、W3の様に拡張子だけが違うファイルも削除される為
# W3では【path/RES_ID."_f.".*】【path/RES_ID."_"$i."_f.".*】など画像登録とは
# 別のファイル名形式にさせる必要がある。
#

# $path		ファイルが置いてある階層へのパス
# $con		削除対象のファイル条件
#=================================================================================
function search_file_del($path,$con){

	//階層と条件が入っているか確認
	if($path && $con){

		//検索に引っかかったファイルを削除する
		foreach (glob($path.$con) as $filename) {

			if(($filename != "") && file_exists($filename)){//ファイルが存在すれば削除処理を行う
				unlink($filename) or die("ファイルの削除に失敗しました。");
			}
		}
	}
}

?>