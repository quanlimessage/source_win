<?php
/*******************************************************************************
更新プログラム

	削除処理
	※完全にデータを削除します。(DELETE文)

*******************************************************************************/

#---------------------------------------------------------------
# 不正アクセスチェック（直接このファイルにアクセスした場合）
#	※厳しく行う場合はIDとPWも一致するかまで行う
#---------------------------------------------------------------
if( !$_SERVER['PHP_AUTH_USER'] || !$_SERVER['PHP_AUTH_PW'] ){
	header("HTTP/1.0 404 Not Found"); exit();
}
// 不正アクセスチェック（直接このファイルにアクセスした場合）
if(!$injustice_access_chk){
	header("HTTP/1.0 404 Not Found");exit();
}

#================================================================================
# データ削除
#================================================================================
// POST受信値を確認後に削除処理に入る
if( $_POST["status"] == "del_data" ):

	// POSTデータの受け取りと共通な文字列処理
	extract(utilLib::getRequestParams("post",array(8,7,1,4,5)));

	// 削除対象記事IDデータのチェック
	if(!preg_match("/^([0-9]{10,})-([0-9]{6})$/",$schedule_id) || empty($schedule_id)){die("致命的エラー：不正な処理データが送信されましたので強制終了します！");}

	/////////////////////////////////////
	// 該当データの完全削除用SQL組立て
	$del_sql = "
	DELETE FROM
		".SCHEDULE."
	WHERE
		(SCHEDULE_ID = '$schedule_id')
	";
	// ＳＱＬを実行（失敗時：エラーメッセージを格納）
	$upResult = dbOpe::regist($del_sql,DB_USER,DB_PASS,DB_NAME,DB_SERVER);
	if($upResult)die("データ削除に失敗しました");

	//画像の削除
	/*
	for($i = 1; $i <= 31; $i++){
		if(file_exists("../../schedule/up_img/".$schedule_id . "_" . $i.".jpg")){
			unlink("../../schedule/up_img/".$schedule_id . "_" . $i.".jpg") or die("画像の削除に失敗しました。");
		}
	}
	*/

endif;
?>
